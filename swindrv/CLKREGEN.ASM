	.286
	OPTION	OFFSET:GROUP
	PUBLIC	CLKTIM
	EXTRN	M$SWINFDC_NEAR:NEAR
DGROUP	GROUP	SWINDRV_DATA
SWINDRV_TEXT	SEGMENT	PARA	PUBLIC	'CODE'
	ASSUME	CS:SWINDRV_TEXT,DS:DGROUP,ES:NOTHING,SS:DGROUP
CLKTIM	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	AX,[BP+10H]
	MOV	[RID_CMD+2],AL
	MOV	AX,[BP+0EH]
	MOV	[TIMNOS],AL
	LES	SI,[BP+0AH]
	MOV	DI,SI
	MOV	CL,[TIMNOS]
	XOR	CH,CH
	SHL	CX,1
	SHL	CX,1
	XOR	AX,AX
	REP	STOSW
	MOV	CL,[TIMNOS]
	XOR	CH,CH
	DEC	AX
	REP	STOSW
	MOV	CX,10H
TIMCYC:	PUSH	CX
	PUSH	ES
	MOV	BX,40H
	MOV	ES,BX
	MOV	BYTE PTR ES:[BX],0
	POP	ES
	CALL	TIM_ST
	CALL	RDID_DD
	JC	TIMERR
	MOV	BP,DX
	MOV	CL,[TIMNOS]
	XOR	CH,CH
	MOV	DI,CX
	SHL	DI,1
SECCYC:	CALL	RDID_DD
	JC	TIMERR
	MOV	AX,BP
	SUB	AX,DX
	MOV	BP,DX
	MOV	BL,[RID_STS+6]
	XOR	BH,BH
	DEC	BX
	SHL	BX,1
	ADD	BX,DI
	ADD	ES:[BX+SI],AX
	PUSHF
	ADD	BX,DI
	POPF
	ADC	WORD PTR ES:[BX+SI],0
	ADD	BX,DI
	CMP	ES:[BX+SI],AX
	JA	@F
	MOV	ES:[BX+SI],AX
@@:	ADD	BX,DI
	CMP	ES:[BX+SI],AX
	JB	@F
	MOV	ES:[BX+SI],AX
@@:	LOOP	SECCYC
	POP	CX
	LOOP	TIMCYC
	PUSH	ES
	MOV	BX,40H
	MOV	ES,BX
	MOV	BYTE PTR ES:[BX],0
	POP	ES
	XOR	BX,BX
	MOV	CL,[TIMNOS]
	XOR	CH,CH
AVRCYC:	PUSH	BX
	ADD	BX,DI
	MOV	AX,ES:[BX+SI]
	ADD	BX,DI
	MOV	DX,ES:[BX+SI]
	SHR	DX,1
	RCR	AX,1
	SHR	DX,1
	RCR	AX,1
	SHR	DX,1
	RCR	AX,1
	SHR	DX,1
	RCR	AX,1
	ADD	BX,DI
	MOV	DX,ES:[BX+SI]
	ADD	BX,DI
	ADD	DX,ES:[BX+SI]
	RCR	DX,1
	MOV	BP,AX
	SUB	BP,DX
	JNS	@F
	NEG	BP
@@:	CMP	BP,6
	JB	@F
	CMP	BP,0CH
	JA	@F
	ADD	AX,DX
	RCR	AX,1
@@:	POP	BX
	MOV	ES:[BX+SI],AX
	ADD	BX,2
	LOOP	AVRCYC
	XOR	AX,AX
@@:	XOR	DX,DX
	POP	DI
	POP	SI
	POP	BP
	RET	8
TIMERR:	POP	CX
	MOV	AX,1
	JZ	@B
	MOV	AX,2
	JMP	@B
CLKTIM	ENDP
RDID_DD	PROC	NEAR
	PUSH	AX
	PUSH	CX
	MOV	CX,2
RIDCYC:	CALL	READ_ID
	JC	RIDEND
	MOV	AL,[TIMNOS]
	CMP	[RID_STS+6],AL
	JBE	@F
	LOOP	RIDCYC
@@:	CLC
RIDEND:	POP	CX
	POP	AX
	RET
RDID_DD	ENDP
READ_ID	PROC	NEAR
	PUSH	AX
	PUSH	BX
	PUSH	SI
	LEA	BX,[RID_CMD]
	MOV	SI,0EH
	CALL	M$SWINFDC_NEAR
	JC	@F
	PUSH	ES
	MOV	BX,40H
	MOV	ES,BX
	AND	BYTE PTR ES:[3EH],01111111B
	POP	ES
	MOV	SI,0CH
	CALL	M$SWINFDC_NEAR
	JC	@F
	CALL	TIM_RD
	LEA	BX,[RID_STS]
	MOV	SI,10H
	CALL	M$SWINFDC_NEAR
@@:	POP	SI
	POP	BX
	POP	AX
	RET
READ_ID	ENDP
TIM_ST	PROC	NEAR
	CLI
	IN	AL,61H
	JMP	SHORT	$+2
	JMP	SHORT	$+2
	OR	AL,00000001B
	AND	AL,11111101B
	OUT	61H,AL
	JMP	SHORT	$+2
	JMP	SHORT	$+2
	MOV	AL,10110100B
	OUT	43H,AL
	JMP	SHORT	$+2
	JMP	SHORT	$+2
	XOR	AL,AL
	OUT	42H,AL
	JMP	SHORT	$+2
	JMP	SHORT	$+2
	OUT	42H,AL
	JMP	SHORT	$+2
	JMP	SHORT	$+2
	STI
	RET
TIM_ST	ENDP
TIM_RD	PROC	NEAR
	CLI
	MOV	AL,10000100B
	OUT	43H,AL
	JMP	SHORT	$+2
	JMP	SHORT	$+2
	IN	AL,42H
	MOV	DL,AL
	JMP	SHORT	$+2
	JMP	SHORT	$+2
	IN	AL,42H
	MOV	DH,AL
	STI
	RET
TIM_RD	ENDP
SWINDRV_TEXT	ENDS
SWINDRV_DATA	SEGMENT	WORD	PUBLIC	'DATA'
RID_CMD	DB	2,4AH,?
RID_STS	DB	7,7 DUP(?)
TIMNOS	DB	?
SWINDRV_DATA	ENDS
	END
