	PUBLIC	SETATTR,SETCOL,SVSCR,MKWIND,MKBORD1,MKBORD2,SCRUP,SCRDN,FPRINT,CHATTR,RSTSCR
	PUBLIC	CURSOR,CUROFF,RVIDEOS
	PUBLIC	SCR_BUF,S_B_PTR
	EXTRN	_GETSTR:FAR,_DELSTR:FAR
	EXTRN	SV_V_MOD:BYTE,V_MON_TYP:BYTE,VB_FRAME:WORD
	EXTRN	ST_CUR_LIN:BYTE,EN_CUR_LIN:BYTE
	EXTRN	C_ATTR:BYTE,M_ATTR:BYTE,ATTR_ADR:WORD
	EXTRN	STR_BUF:BYTE
DGROUP	GROUP	ASMEXT_DATA
ASMEXT_TEXT	SEGMENT	PARA	PUBLIC	'CODE'
	ASSUME	CS:ASMEXT_TEXT,DS:DGROUP,ES:DGROUP,SS:NOTHING
SETATTR	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	AX,[BP+0AH]
	MOV	[FATTR],AL
	MOV	AX,[BP+8]
	MOV	[LATTR],AL
	MOV	AX,[BP+6]
	MOV	[XATTR],AL
	POP	BP
	RET	6
SETATTR	ENDP
SETCOL	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	AX,[BP+0AH]
	LEA	BX,[C_ATTR]
	TEST	AX,AX
	JZ	@F
	LEA	BX,[M_ATTR]
@@:	ADD	BX,[BP+8]
	MOV	AX,[BP+6]
	MOV	[BX],AL
	POP	BP
	RET	6
SETCOL	ENDP
SVSCR	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	PUSH	DS
	MOV	BP,SP
	MOV	AX,DS
	MOV	ES,AX
	MOV	DX,[BP+12H]
	MOV	[SROW],DL
	MOV	AX,[BP+10H]
	MOV	[SCOL],AL
	CALL	COMP
	MOV	DS,AX
	MOV	DI,ES:[S_B_PTR]
	MOV	DX,[BP+0EH]
	MOV	ES:[NROW],DL
	MOV	CX,[BP+0CH]
	MOV	ES:[NCOL],CL
	CLD
	MOV	BX,SI
CYCLE:	PUSH	CX
	REP	MOVSW
	POP	CX
	ADD	BX,160
	MOV	SI,BX
	DEC	DX
	JNZ	CYCLE
	POP	DS
	LEA	SI,[SROW]
	MOV	CX,2
	REP	MOVSW
	MOV	[S_B_PTR],DI
	POP	DI
	POP	SI
	POP	BP
	RET	8
SVSCR	ENDP
MKWIND	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	DX,[BP+12H]
	MOV	AX,[BP+10H]
	CALL	COMP
	MOV	DI,SI
	MOV	ES,AX
	MOV	DX,[BP+0EH]
	MOV	CX,[BP+0CH]
	MOV	AX,[BP+0AH]
	CALL	CATTR
	MOV	BX,[ATTR_ADR]
	XLATB
	XCHG	AL,AH
	CLD
	MOV	BX,DI
CYCLE0:	PUSH	CX
	REP	STOSW
	POP	CX
	ADD	BX,160
	MOV	DI,BX
	DEC	DX
	JNZ	CYCLE0
	POP	DI
	POP	SI
	POP	BP
	RET	0AH
MKWIND	ENDP
MKBORD1	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	DX,[BP+12H]
	MOV	AX,[BP+10H]
	CALL	COMP
	MOV	DI,SI
	MOV	ES,AX
	MOV	DX,[BP+0EH]
	SUB	DX,2
	MOV	CX,[BP+0CH]
	SUB	CX,2
	MOV	AX,[BP+0AH]
	CALL	CATTR
	MOV	BX,[ATTR_ADR]
	XLATB
	MOV	AH,AL
	CLD
	MOV	BX,DI
	MOV	AL,0DAH
	STOSW
	MOV	AL,0C4H
	PUSH	CX
	REP	STOSW
	POP	CX
	MOV	AL,0BFH
	STOSW
	ADD	BX,160
	MOV	DI,BX
	MOV	AL,0B3H
CYCLE1:	STOSW
	ADD	DI,CX
	ADD	DI,CX
	STOSW
	ADD	BX,160
	MOV	DI,BX
	DEC	DX
	JNZ	CYCLE1
	MOV	AL,0C0H
	STOSW
	MOV	AL,0C4H
	REP	STOSW
	MOV	AL,0D9H
	STOSW
	POP	DI
	POP	SI
	POP	BP
	RET	0AH
MKBORD1	ENDP
MKBORD2	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	DX,[BP+12H]
	MOV	AX,[BP+10H]
	CALL	COMP
	MOV	DI,SI
	MOV	ES,AX
	MOV	DX,[BP+0EH]
	SUB	DX,2
	MOV	CX,[BP+0CH]
	SUB	CX,2
	MOV	AX,[BP+0AH]
	CALL	CATTR
	MOV	BX,[ATTR_ADR]
	XLATB
	MOV	AH,AL
	CLD
	MOV	BX,DI
	MOV	AL,0C9H
	STOSW
	MOV	AL,0CDH
	PUSH	CX
	REP	STOSW
	POP	CX
	MOV	AL,0BBH
	STOSW
	ADD	BX,160
	MOV	DI,BX
	MOV	AL,0BAH
CYCLE2:	STOSW
	ADD	DI,CX
	ADD	DI,CX
	STOSW
	ADD	BX,160
	MOV	DI,BX
	DEC	DX
	JNZ	CYCLE2
	MOV	AL,0C8H
	STOSW
	MOV	AL,0CDH
	REP	STOSW
	MOV	AL,0BCH
	STOSW
	POP	DI
	POP	SI
	POP	BP
	RET	0AH
MKBORD2	ENDP
SCRUP	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	DX,[BP+10H]
	MOV	AX,[BP+0EH]
	CALL	COMP
	MOV	ES,AX
	MOV	DI,SI
	ADD	SI,160
	CLD
	MOV	DX,[BP+0CH]
	DEC	DX
	MOV	CX,[BP+0AH]
	MOV	BX,SI
	MOV	BP,DI
CYCLE7:	PUSH	CX
	DB	00100110B
	REP	MOVSW
	POP	CX
	ADD	BX,160
	MOV	SI,BX
	ADD	BP,160
	MOV	DI,BP
	DEC	DX
	JNZ	CYCLE7
	POP	DI
	POP	SI
	POP	BP
	RET	8
SCRUP	ENDP
SCRDN	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	DX,[BP+10H]
	ADD	DX,[BP+0CH]
	DEC	DX
	MOV	AX,[BP+0EH]
	ADD	AX,[BP+0AH]
	DEC	AX
	CALL	COMP
	MOV	ES,AX
	MOV	DI,SI
	SUB	SI,160
	STD
	MOV	DX,[BP+0CH]
	DEC	DX
	MOV	CX,[BP+0AH]
	MOV	BX,SI
	MOV	BP,DI
CYCLE8:	PUSH	CX
	DB	00100110B
	REP	MOVSW
	POP	CX
	SUB	BX,160
	MOV	SI,BX
	SUB	BP,160
	MOV	DI,BP
	DEC	DX
	JNZ	CYCLE8
	CLD
	POP	DI
	POP	SI
	POP	BP
	RET	8
SCRDN	ENDP
FPRINT	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	BX,[BP+0CH]
	PUSH	BX
	CALL	_GETSTR
	ADD	SP,2
	TEST	AX,AX
	JZ	L2
	CLD
	PUSH	AX
	MOV	DX,[BP+10H]
	MOV	AX,[BP+0EH]
	CALL	COMP
	POP	CX
	MOV	DI,SI
	MOV	ES,AX
	MOV	AX,[BP+0AH]
	CALL	CATTR
	MOV	BX,[ATTR_ADR]
	LEA	SI,[STR_BUF]
	XLATB
	MOV	AH,AL
CYCLE3:	LODSB
	STOSW
	LOOP	CYCLE3
L2:	POP	DI
	POP	SI
	POP	BP
	RET	8
FPRINT	ENDP
CHATTR	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	DX,[BP+10H]
	MOV	AX,[BP+0EH]
	CALL	COMP
	MOV	DI,SI
	MOV	ES,AX
	MOV	CX,[BP+0CH]
	MOV	AX,[BP+0AH]
	CALL	CATTR
	MOV	BX,[ATTR_ADR]
	TEST	AX,AX
	JZ	L1
	CLD
	XLATB
	JMP	SHORT	CYCLE5
L1:	MOV	AX,[BX]
CYCLE4:	INC	DI
	AND	ES:[DI],AL
	XOR	ES:[DI],AH
	INC	DI
	LOOP	CYCLE4
	JMP	SHORT	L5
CYCLE5:	INC	DI
	STOSB
	LOOP	CYCLE5
L5:	POP	DI
	POP	SI
	POP	BP
	RET	8
CHATTR	ENDP
RSTSCR	PROC	FAR
	PUSH	SI
	PUSH	DI
	MOV	SI,[S_B_PTR]
	SUB	SI,4
	XOR	DX,DX
	MOV	DL,[SI]
	XOR	AX,AX
	MOV	AL,[SI+1]
	PUSH	SI
	CALL	COMP
	MOV	DI,SI
	MOV	ES,AX
	POP	SI
	XOR	BX,BX
	MOV	BL,[SI+2]
	XOR	CX,CX
	MOV	CL,[SI+3]
	MOV	AX,BX
	MUL	CX
	SHL	AX,1
	SUB	SI,AX
	MOV	[S_B_PTR],SI
	MOV	DX,BX
	CLD
	MOV	BX,DI
CYCLE6:	PUSH	CX
	REP	MOVSW
	POP	CX
	ADD	BX,160
	MOV	DI,BX
	DEC	DX
	JNZ	CYCLE6
	POP	DI
	POP	SI
	RET
RSTSCR	ENDP
CURSOR	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	DX,3D4H
	CMP	[V_MON_TYP],0
	JZ	L3
	MOV	DX,3B4H
L3:	MOV	AL,0AH
	OUT	DX,AL
	MOV	AL,[ST_CUR_LIN]
	INC	DX
	OUT	DX,AL
	MOV	AL,0BH
	DEC	DX
	OUT	DX,AL
	MOV	AL,[EN_CUR_LIN]
	INC	DX
	OUT	DX,AL
	DEC	DX
	PUSH	DX
	MOV	DX,[BP+8]
	MOV	AX,[BP+6]
	CALL	COMP
	POP	DX
	MOV	BX,SI
	SHR	BX,1
	MOV	AL,0FH
	OUT	DX,AL
	MOV	AL,BL
	INC	DX
	OUT	DX,AL
	MOV	AL,0EH
	DEC	DX
	OUT	DX,AL
	MOV	AL,BH
	INC	DX
	OUT	DX,AL
	POP	BP
	RET	4
CURSOR	ENDP
CUROFF	PROC	FAR
	MOV	DX,3D4H
	CMP	[V_MON_TYP],0
	JZ	L4
	MOV	DX,3B4H
L4:	MOV	AL,0AH
	OUT	DX,AL
	MOV	AL,11100000B
	INC	DX
	OUT	DX,AL
	MOV	AL,0FH
	DEC	DX
	OUT	DX,AL
	MOV	AL,80*25 AND 0FFH
	INC	DX
	OUT	DX,AL
	MOV	AL,0EH
	DEC	DX
	OUT	DX,AL
	MOV	AL,80*25 SHR 8
	INC	DX
	OUT	DX,AL
	RET
CUROFF	ENDP
RVIDEOS	PROC	FAR
	XOR	AX,AX
	MOV	AL,[SV_V_MOD]
	INT	10H
	CALL	_DELSTR
	RET
RVIDEOS	ENDP
COMP	PROC	NEAR
	MOV	CX,4
	SHL	DX,CL
	PUSH	DX
	MOV	CX,2
	SHL	DX,CL
	POP	BX
	ADD	DX,BX
	ADD	DX,AX
	SHL	DX,1
	MOV	SI,DX
	MOV	AX,[VB_FRAME]
	RET
COMP	ENDP
CATTR	PROC	NEAR
	CMP	AL,[FATTR]
	JB	@F
	CMP	AL,[LATTR]
	JA	@F
	ADD	AL,[XATTR]
@@:	RET
CATTR	ENDP
ASMEXT_TEXT	ENDS
ASMEXT_DATA	SEGMENT	WORD	PUBLIC	'DATA'
SCR_BUF	DB	16384 DUP(?)
S_B_PTR	DW	?
SROW	DB	?
SCOL	DB	?
NROW	DB	?
NCOL	DB	?
FATTR	DB	0
LATTR	DB	0
XATTR	DB	0
ASMEXT_DATA	ENDS
	END
