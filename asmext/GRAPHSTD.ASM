;	OPTION	OFFSET:GROUP
	PUBLIC	GRAPHINIT,GRAPHCLEAN
	PUBLIC	GRAPHCURS,GRAPHCURR
	PUBLIC	GRAPHLINE,GRAPHLOCATE,GRAPHPRINT,GRAPHCLS
	EXTRN	_GETSTR:FAR,STR_BUF:BYTE
DGROUP	GROUP	ASMEXT_DATA
ASMEXT_TEXT	SEGMENT	PARA	PUBLIC	'CODE'
	ASSUME	CS:ASMEXT_TEXT,DS:DGROUP,ES:NOTHING,SS:DGROUP
GRAPHINIT	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	AH,0FH
	PUSH	BP
	INT	10H
	POP	BP
	MOV	[DOSVMOD],AL
	MOV	AX,[BP+8]
	TEST	AX,AX
	JNZ	@F
	PUSH	AX
	MOV	AX,[BP+6]
	XOR	AH,AH
	PUSH	BP
	INT	10H
	POP	BP
	POP	AX
@@:	TEST	AX,AX
	JZ	@F
	PUSH	AX
	MOV	AX,4F02H
	MOV	BX,[BP+6]
	PUSH	BP
	INT	10H
	POP	BP
	POP	AX
@@:	POP	BP
	RET	4
GRAPHINIT	ENDP
GRAPHCLEAN	PROC	FAR
	MOV	AL,[DOSVMOD]
	XOR	AH,AH
	PUSH	BP
	INT	10H
	POP	BP
	RET
GRAPHCLEAN	ENDP
GRAPHCURS	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	DX,[BP+0EH]
	LEA	SI,[CURMASK]
	LEA	DI,[SAVEBUF]
	MOV	AX,DS
	MOV	ES,AX
	MOV	CX,14H
GCSRSL:	LODSW
	PUSH	CX
	MOV	BX,10H
	MOV	CX,[BP+0CH]
GCSCSL:	PUSH	BX
	PUSH	AX
	MOV	AH,0DH
	XOR	BH,BH
	PUSH	BP
	INT	10H
	POP	BP
	STOSB
	POP	AX
	SHL	AX,1
	JNC	@F
	PUSH	AX
	MOV	AL,[BP+0AH]
	MOV	AH,0CH
	XOR	BH,BH
	PUSH	BP
	INT	10H
	POP	BP
	POP	AX
@@:	POP	BX
	INC	CX
	DEC	BX
	JNZ	GCSCSL
	POP	CX
	INC	DX
	LOOP	GCSCSL
	POP	DI
	POP	SI
	POP	BP
	RET	6
GRAPHCURS	ENDP
GRAPHCURR	PROC	FAR
	PUSH	BP
	PUSH	SI
	MOV	BP,SP
	MOV	DX,[BP+0AH]
	LEA	SI,[SAVEBUF]
	MOV	CX,14H
GCRRSL:	LODSW
	PUSH	CX
	MOV	BX,10H
	MOV	CX,[BP+8]
GCRCSL:	PUSH	BX
	LODSB
	MOV	AH,0CH
	XOR	BH,BH
	PUSH	BP
	INT	10H
	POP	BP
	POP	BX
	INC	CX
	DEC	BX
	JNZ	GCRCSL
	POP	CX
	INC	DX
	LOOP	GCRCSL
	POP	SI
	POP	BP
	RET	4
GRAPHCURR	ENDP
GRAPHLINE	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	MOV	BP,SP
	MOV	CX,1
	MOV	DX,1
	MOV	DI,[BP+0EH]
	TEST	DI,DI
	JNS	@F
	NEG	DX
	NEG	DI
@@:	MOV	[DIYIN],DX
	MOV	SI,[BP+0CH]
	TEST	SI,SI
	JNS	@F
	NEG	CX
	NEG	SI
@@:	MOV	[DIXIN],CX
	CMP	SI,DI
	JGE	@F
	XOR	CX,CX
	XCHG	SI,DI
	JMP	SHORT	GLNSHD
@@:	XOR	DX,DX
GLNSHD:	MOV	[SHDI],DI
	MOV	[STXIN],CX
	MOV	[STYIN],DX
	SHL	DI,1
	MOV	[STCO],DI
	SUB	DI,SI
	MOV	BX,DI
	SUB	DI,SI
	MOV	[DICO],DI
	MOV	CX,[BP+10H]
	MOV	DX,[BP+12H]
	MOV	AL,[BP+0AH]
GLNLDL:	MOV	AH,0CH
	PUSH	BX
	PUSH	BP
	XOR	BH,BH
	INT	10H
	POP	BP
	POP	BX
	TEST	BX,BX
	JNS	@F
	ADD	CX,[STXIN]
	ADD	DX,[STYIN]
	ADD	BX,[STCO]
	JMP	SHORT	GLNLDN
@@:	ADD	CX,[DIXIN]
	ADD	DX,[DIYIN]
	ADD	BX,[DICO]
GLNLDN:	DEC	SI
	JNS	GLNLDL
	POP	DI
	POP	SI
	POP	BP
	RET	0AH
GRAPHLINE	ENDP
GRAPHLOCATE	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	AH,2
	XOR	BH,BH
	MOV	DL,[BP+6]
	MOV	DH,[BP+8]
	INT	10H
	POP	BP
	RET	4
GRAPHLOCATE	ENDP
GRAPHPRINT	PROC	FAR
	PUSH	BP
	PUSH	SI
	MOV	BP,SP
	PUSH	[BP+0AH]
	CALL	_GETSTR
	ADD	SP,2
	MOV	CX,AX
	LEA	SI,[STR_BUF]
@@:	LODSB
	MOV	AH,0EH
	MOV	BL,[BP+8]
	XOR	BH,BH
	PUSH	BP
	INT	10H
	POP	BP
	LOOP	@B
	POP	SI
	POP	BP
	RET	4
GRAPHPRINT	ENDP
GRAPHCLS	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	AX,600H
	XOR	BH,BH
	MOV	CH,[BP+0CH]
	MOV	CL,[BP+0AH]
	MOV	DH,[BP+8]
	MOV	DL,[BP+6]
	INT	10H
	MOV	AH,2
	MOV	DX,CX
	INT	10H
	POP	BP
	RET	8
GRAPHCLS	ENDP
ASMEXT_TEXT	ENDS
ASMEXT_DATA	SEGMENT	WORD	PUBLIC	'DATA'
DOSVMOD	DB	?
CURMASK	DB	000H,000H
	DB	040H,000H
	DB	060H,000H
	DB	070H,000H
	DB	078H,000H
	DB	07CH,000H
	DB	07EH,000H
	DB	07FH,000H
	DB	07FH,080H
	DB	07FH,0C0H
	DB	07EH,000H
	DB	076H,000H
	DB	066H,000H
	DB	043H,000H
	DB	003H,000H
	DB	001H,080H
	DB	001H,080H
	DB	000H,0C0H
	DB	000H,0C0H
	DB	000H,000H
SAVEBUF	DB	320 DUP(?)
DIYIN	DW	?
DIXIN	DW	?
SHDI	DW	?
STXIN	DW	?
STYIN	DW	?
STCO	DW	?
DICO	DW	?
ASMEXT_DATA	ENDS
	END
