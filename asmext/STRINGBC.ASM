	OPTION	OFFSET:GROUP
	IFDEF	FARSTCK
SSEG	TEXTEQU	<STACK>
	ELSE
SSEG	TEXTEQU	<DGROUP>
	ENDIF
	PUBLIC	_FINSTR_B,_GETSTR_B,_PUTSTR_B,_DELSTR_B
	PUBLIC	_STRBUF
	EXTRN	STRINGADDRESS:FAR,STRINGASSIGN:FAR
	EXTRN	STRINGLENGTH:FAR,STRINGRELEASE:FAR
DGROUP	GROUP	ASMEXT_DATA
ASMEXT_TEXT	SEGMENT	PARA	PUBLIC	'CODE'
	ASSUME	CS:ASMEXT_TEXT,DS:DGROUP,ES:NOTHING,SS:SSEG
_FINSTR_B	PROC	CTYPE
	PUSH	BP
	MOV	BP,SP
	PUSH	[BP+6]
	CALL	STRINGADDRESS
	POP	BP
	RET
_FINSTR_B	ENDP
_GETSTR_B	PROC	CTYPE
	PUSH	BP
	MOV	BP,SP
	XOR	AX,AX
	MOV	BX,[BP+6]
	MOV	CX,100H
	LEA	DX,[_STRBUF]
	PUSH	BX
	PUSH	DS
	PUSH	BX
	PUSH	AX
	PUSH	DS
	PUSH	DX
	PUSH	CX
	CALL	STRINGASSIGN
	CALL	STRINGLENGTH
	POP	BP
	RET
_GETSTR_B	ENDP
_PUTSTR_B	PROC	CTYPE
	PUSH	BP
	MOV	BP,SP
	MOV	AX,[BP+6]
	LEA	BX,[_STRBUF]
	XOR	CX,CX
	LEA	DX,[OUTSD]
	PUSH	DS
	PUSH	BX
	PUSH	AX
	PUSH	DS
	PUSH	DX
	PUSH	CX
	CALL	STRINGASSIGN
	LEA	AX,[OUTSD]
	IFIDN	DTYPE,<FAR>
	MOV	DX,DS
	ENDIF
	POP	BP
	RET
_PUTSTR_B	ENDP
_DELSTR_B	PROC	CTYPE
	LEA	BX,[OUTSD]
	CMP	WORD PTR [BX],0
	JNZ	@F
	CMP	WORD PTR [BX+2],0
	JZ	L1
@@:	PUSH	BX
	PUSH	BX
	CALL	STRINGRELEASE
	POP	BX
	MOV	WORD PTR [BX],0
	MOV	WORD PTR [BX+2],0
L1:	RET
_DELSTR_B	ENDP
ASMEXT_TEXT	ENDS
ASMEXT_DATA	SEGMENT	WORD	PUBLIC	'DATA'
_STRBUF	DB	256 DUP(?)
OUTSD	DD	0
ASMEXT_DATA	ENDS
	IFDEF	FARSTCK
STACK	SEGMENT	PARA	STACK	'STACK'
STACK	ENDS
	ENDIF
	END
