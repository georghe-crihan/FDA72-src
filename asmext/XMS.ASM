;	OPTION	OFFSET:GROUP
	PUBLIC	XMSINIT,XMSALL,XMSFREE,XMSGET,XMSPUT
DGROUP	GROUP	ASMEXT_DATA
ASMEXT_TEXT	SEGMENT	PARA	PUBLIC	'CODE'
	ASSUME	CS:ASMEXT_TEXT,DS:DGROUP,ES:NOTHING,SS:DGROUP
XMSINIT	PROC	FAR
	PUSH	BP
	PUSH	SI
	PUSH	DI
	PUSH	DS
	PUSHF
	MOV	AX,4300H
	INT	2FH
	CMP	AL,80H
	JE	@F
	POPF
	POP	DS
	POP	DI
	POP	SI
	POP	BP
	MOV	AX,1
	RET
@@:	MOV	AX,4310H
	INT	2FH
	POPF
	POP	DS
	POP	DI
	POP	SI
	POP	BP
	MOV	WORD PTR [XMSPTR],BX
	MOV	WORD PTR [XMSPTR+2],ES
	XOR	AX,AX
	RET
XMSINIT	ENDP
XMSALL	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	DX,WORD PTR [BP+8]
	MOV	BX,WORD PTR [BP+0AH]
	ADD	DX,3FFH
	ADC	BX,0
	MOV	CX,0AH
@@:	SHR	BX,1
	RCR	DX,1
	LOOP	@B
	TEST	BX,BX
	MOV	AX,1
	JNZ	@F
	MOV	AX,WORD PTR [XMSPTR]
	OR	AX,WORD PTR [XMSPTR+2]
	MOV	AX,5
	JZ	@F
	MOV	AH,09H
	CALL	DWORD PTR [XMSPTR]
	TEST	AX,AX
	PUSH	BX
	MOV	BX,[BP+6]
	MOV	[BX],DX
	POP	BX
	MOV	AX,0
	JNZ	@F
	MOV	AX,2
	CMP	BL,0A0H
	JE	@F
	MOV	AX,3
	CMP	BL,0A1H
	JE	@F
	MOV	AX,4
@@:	POP	BP
	RET	6
XMSALL	ENDP
XMSFREE	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	AX,WORD PTR [XMSPTR]
	OR	AX,WORD PTR [XMSPTR+2]
	MOV	AX,1
	JZ	@F
	MOV	AH,0AH
	MOV	DX,[BP+6]
	CALL	DWORD PTR [XMSPTR]
	TEST	AX,AX
	MOV	AX,0
	JNZ	@F
	MOV	AX,2
	CMP	BL,0A2H
	JE	@F
	CMP	BL,0ABH
	JE	@F
	MOV	AX,3
@@:	POP	BP
	RET	2
XMSFREE	ENDP
XMSGET	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	AX,WORD PTR [XMSPTR]
	OR	AX,WORD PTR [XMSPTR+2]
	MOV	AX,1
	JZ	@F
	MOV	BX,[BP+6]
	TEST	BX,1
	MOV	AX,2
	JNZ	@F
	MOV	WORD PTR [BYTECNT],BX
	MOV	WORD PTR [BYTECNT+2],0
	MOV	AX,[BP+10H]
	MOV	[SRCHAND],AX
	MOV	AX,[BP+8]
	MUL	BX
	MOV	WORD PTR [SRCPTR],AX
	MOV	CX,DX
	MOV	AX,[BP+0AH]
	MUL	BX
	ADD	AX,CX
	ADC	DX,0
	MOV	WORD PTR [SRCPTR+2],AX
	TEST	DX,DX
	MOV	AX,2
	JNZ	@F
	MOV	[DSTHAND],0
	MOV	AX,[BP+0CH]
	MOV	WORD PTR [DSTPTR],AX
	MOV	AX,[BP+0EH]
	MOV	WORD PTR [DSTPTR+2],AX
	MOV	AH,0BH
	PUSH	SI
	LEA	SI,[BYTECNT]
	CALL	DWORD PTR [XMSPTR]
	POP	SI
	TEST	AX,AX
	MOV	AX,0
	JNZ	@F
	MOV	AX,2
	CMP	BL,0A3H
	JE	@F
	CMP	BL,0A4H
	JE	@F
	CMP	AL,0A7H
	JE	@F
	MOV	AX,3
@@:	POP	BP
	RET	0CH
XMSGET	ENDP
XMSPUT	PROC	FAR
	PUSH	BP
	MOV	BP,SP
	MOV	AX,WORD PTR [XMSPTR]
	OR	AX,WORD PTR [XMSPTR+2]
	MOV	AX,1
	JZ	@F
	MOV	BX,[BP+6]
	TEST	BX,1
	MOV	AX,2
	JNZ	@F
	MOV	WORD PTR [BYTECNT],BX
	MOV	WORD PTR [BYTECNT+2],0
	MOV	[SRCHAND],0
	MOV	AX,[BP+0CH]
	MOV	WORD PTR [SRCPTR],AX
	MOV	AX,[BP+0EH]
	MOV	WORD PTR [SRCPTR+2],AX
	MOV	AX,[BP+10H]
	MOV	[DSTHAND],AX
	MOV	AX,[BP+8]
	MUL	BX
	MOV	WORD PTR [DSTPTR],AX
	MOV	CX,DX
	MOV	AX,[BP+0AH]
	MUL	BX
	ADD	AX,CX
	ADC	DX,0
	MOV	WORD PTR [DSTPTR+2],AX
	TEST	DX,DX
	MOV	AX,2
	JNZ	@F
	MOV	AH,0BH
	PUSH	SI
	LEA	SI,[BYTECNT]
	CALL	DWORD PTR [XMSPTR]
	POP	SI
	TEST	AX,AX
	MOV	AX,0
	JNZ	@F
	MOV	AX,2
	CMP	BL,0A5H
	JE	@F
	CMP	BL,0A6H
	JE	@F
	CMP	AL,0A7H
	JE	@F
	MOV	AX,3
@@:	POP	BP
	RET	0CH
XMSPUT	ENDP
ASMEXT_TEXT	ENDS
ASMEXT_DATA	SEGMENT	WORD	PUBLIC	'DATA'
XMSPTR	DD	0
BYTECNT	DD	?
SRCHAND	DW	?
SRCPTR	DD	?
DSTHAND	DW	?
DSTPTR	DD	?
ASMEXT_DATA	ENDS
	END
